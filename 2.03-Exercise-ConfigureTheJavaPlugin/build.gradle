/*

In this series of exercises we'll be building on our existing knowledge of the
Java plugin. While the Java plugin defaults are sufficient for many projects,
we will typically need to add additional configuration.

Exercises:

1. Apply the Java plugin to your project.
2. Modify the 'jar' task to add a manifest attribute named
   'Implementation-Version' with a value of '1.0'.
3. Configure the main source set so that it includes the 'java' directory
   as an additional source directory.
4. Use the gradle command-line to build your JAR file.
5. Confirm that the build JAR contains classes from the 'java' source
   directory.

Hint: Take a look at the Gradle DSL documentation for the Jar task for
information on modifying the generated manifest.

https://docs.gradle.org/current/dsl/org.gradle.api.tasks.bundling.Jar.html

Also, you can find information on configuring source sets in the Gradle
User Guide chapter regarding the Java plugin.

https://docs.gradle.org/current/userguide/java_plugin.html#sec:source_sets

*/

apply plugin: 'java'

jar {
	manifest {
		//Wrong way to pass in a map to attributes method
		attributes ['Implementation-Version', '1.0']
		//Correct way as used in solution is
		// attributes 'Implementation-Version': '1.0'
		//In addtion i could have declared a map and pass it in 
		// def map
		// map['Implementation-Version'] = '1.0'
	}
}

sourceSets {
	main {
		java {
		    /* 
			using only 'java' in list for srcDirs fails to compile because Person is in the
			dir 'src/main/java'. But the solution file uses a different command i.e. srcDir
			instead of srcDirs. srcDir only adds a dir to the list instead of replacing the
			list hence it works.			
			*/
			srcDirs = ['src/main/java', 'java']

		}
	}
}